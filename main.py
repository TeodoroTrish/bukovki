import telebot
import random
from telebot import types

bot = telebot.TeleBot("6922678585:AAEzC6VopXHI_CglhxAWyZJtf5EuRd6vpEA")

class User:
    def __init__(self, chat_id, level=None, word=None, masked_word=None, tries=5):
        self.chat_id = chat_id
        self.level = level
        self.word = word
        self.masked_word = masked_word
        self.tries = tries

users = {}  # Словарь для хранения пользователей и их состояний игры

@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, "Привет! Я бот для игры в угадай слово. Чтобы начать игру, введите /game.")

@bot.message_handler(commands=['game'])
def game(message):
    if message.chat.id in users:
        del users[message.chat.id]  # Сброс состояния игры, если игра начата заново
    bot.send_message(message.chat.id, "Выберите уровень сложности:")
    keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    buttons = [types.KeyboardButton(text="Простой"), types.KeyboardButton(text="Сложный")]
    keyboard.add(*buttons)
    bot.send_message(message.chat.id, "Простой - слова из 5-9 букв, Сложный - слова из 5+ букв и содержит слова с дефисом", reply_markup=keyboard)

@bot.message_handler(func=lambda message: message.text in ["Простой", "Сложный"])
def choose_level(message):
    level = message.text
    if level == "Простой":
        words = ["Паркет", "шкаф", "диван", "картина", "посуда", "занавески", "зеркало", "окно", "дверь", "стена", "пол", "потолок", "крыша", "лестница", "кухня", "гостиная", "спальня", "детская", "ванная", "туалет", "прихожая", "балкон", "лоджия", "веранда", "терраса", "сквер", "парк", "площадь", "улица", "дом", "подъезд", "этаж", "чердак", "подвал", "склад", "гараж", "сарай", "баня", "беседка", "бассейн", "дровник", "огород", "сад", "клумба", "забор", "ворота", "калитка", "скамейка", "площадка", "фонарь", "река", "озеро", "море", "гора", "лес", "поляна", "тропа", "небо", "солнце", "луна", "звезда", "дождь", "снегветер", "листопад", "первоцвет", "подснежник", "маргаритка", "тюльпан", "белка", "заяц", "кот", "собака", "голубь", "попугай", "слон", "тигр", "медведь", "лось", "олень", "бобр", "барсук", "крот", "еж", "черепаха", "жара", "холод", "лето", "зима", "осень", "весна", "день", "ночь", "час", "минута", "секунда", "тысяча", "миллион", "миллиард", "метр", "килограмм", "сантиметр", "процент", "курс", "мост", "тоннель", "поезд", "самолет", "машина", "пароход", "баржа", "плот", "катер", "велосипед", "мотоцикл", "лыжи", "коньки", "санки", "ватрушка", "тарзанка", "качели", "горк", " карусель", "могила", "памятник", "крест", "куст", "дерево", "трава", "гриб", "ягода", "цветок", "букет", "мебель", "техника", "одежда", "обувь", "аксессуар", "проект", "план", "задача", "идея", "концепция", "вопрос", "ответ", "тема", "дело", "проблема", "цель", "задача", "интерес", "вкус", "запах", "цвет", "форма", "размер", "стиль", "слог", "звук", "буква", "словофраза", "предложение", "текст", "абзац", "страница", "книга", "журнал", "газета", "интернет", "телефон", "почта", "адрес", "номер", "код", "вопрос", "ответ", "оценка", "премия", "медаль", "грамота", "диплом", "свидетельство", "печать", "подпись", "чек", "билет", "абонемент", "контракт", "договор", "соглашение", "протокол", "устав", "инструкция", "регламент", "проект", "техническое задание", "заявка", "анкета", "резюме", "список", "отчет", "план", "карта", "схема", "рисунок", "фотография", "видео", "аудио", "фильм", "музыка", "спектакль", "выставка", "музей", "магазин", "ресторан", "кафе", "отель", "вокзал", "аэропорт", "рынок", "площадь", "улица", "парк", "дом", "здание", "сооружение", "объект", "инструмент", "материал", "продукт", "бренд", "торговая марка", "знак", "упаковка", "мем", "слоган", "реклама", "презентация", "речь", "доклад", "лекция", "семинар", "тренинг", "курс", "обучение", "исследование", "эксперимент", "теория", "практика", "задача", "процесс", "результат", "опыт", "вывод","рекомендация", "инструкция", "процедура", "требование", "норма", "правило", "стандарт", "сертификат", "лицензия", "патент", "авторское право", "этика", "эстетика", "психология", "педагогика", "медицина", "биология", "физика", "химия", "математика", "история", "культура", "спорт", "туризм", "наука", "техника", "технологии", "инновации", "прогресс", "развитие", "экономика", "политика", "право", "религия", "этика", "эстетика", "образование", "искусство", "развлечения", "отдых", "мода", "экология", "зоология", "ботаника", "география", "социология", "психология", "философия", "археология", "литература", "музыка", "живопись", "скульптура", "архитектура", "театр", "кино", "телевидение", "радио", "фотография", "видео", "аудио", "интернет", "социальные сети", "мобильные приложения", "компьютерные игры", "программирование", "робототехника", "искусственный интеллект", "виртуальная реальность", "блокчейн", "криптовалюта", "биткоин", "технология", "инновация", "наука", "прогресс", "развитие", "экономика", "политика", "право", "религия", "этика", "эстетика", "образование", "искусство", "развлечения", "отдых", "мода", "экология", "зоология", "ботаника", "география", "социология", "психология", "философия", "археология", "литература", "музыка", "живопись", "скульптура", "архитектура", "театр", "кино", "телевидение", "радио", "фотографи"]
    else:
        words = ["абстрагированный", "акустико-эмиссионный", "аллегоричность", "ампер-секунда", "антипрививочник", "апочкалипсис", "архиепископство", "астрофизический", "балагодарныст", "безразличие", "бесполезность", "вакуумметр", "всевышний", "вызволенность", "гелатинизация", "геомагнитный", "гиперограмматический", "гравитационный", "гражданственность", "дезоксирибонуклеиновый", "дезорганизованность", "дерматоглифический", "десемантизироваться", "дизъюнктивность", "диспропорциональность", "дистербильность", "дисциплинированность", "доначисление", "дополнительность", "экзестенциальный", "эксклюзивность", "энциклопедичность", "естественновыборный", "жестококровность", "загадочность", "законопослушность", "заметальность", "занудливость", "запланировать", "запустительность", "затмительность", "значимость", "зыбкость", "игнобель", "изобретательность", "изысканный", "импрозаичность", "инкомпетентность", "интеллектуальность", "иррациональность", "историчность", "канцеляристичность", "каракулевый", "картографирование", "кастильскость", "кибернетизирование", "кипяченость", "классификационность", "клеветничанье", "конгломеративность", "конструктивность", "конформность", "контрастность", "кочанничество", "крепкость", "критикобестия", "кроссовочность", "лампадноть", "легитимность", "лесообразность", "личностность", "ляпотовость", "магнитосферный", "максимум", "маловесность", "маргинальность", "материализация", "медвежонок", "меланжевость", "мерцающесть", "метаморфозировать", "микроскопический", "многогранность", "многозначимость", "многочисленность", "мольбертник", "монотонность", "мраморность", "навьюченность", "надсадность", "наивность", "намагничивать", "настырность", "небалованность", "невыполненность", "нелепость", "ненужность", "неопределенность", "несбыточность", "неуместность", "нечайаность", "ночночемушничество", "нюхательство", "обжигать", "обновлёнка", "обожженность", "общелюбивость", "обтекаемость", "обывательство", "объективность", "описуемость", "определяющественность", "оптимизированный", "опытность", "ординарность", "организованность", "осведомленность", "осветлённость", "особнячок", "осознанный", "остряжение", "откликучесть", "открытокрылость", "очаровательность", "параболический", "парижанство", "патриаршество", "пейзажиство", "перерабатываемость", "переплетенность", "переспоривать", "пессимировать", "пилотироваться", "пиратаство", "пленничество", "плодородность", "поважничество", "погруженность", "подлинность", "подобранность", "подступничество", "подхлестывание", "политизированный", "полновесность", "полуразбегательство", "полусонность", "поняточник", "посмеиваемость", "потенцировать", "почвенничество", "правопритяжательность", "преглаженность", "предобразованный", "предостереженность","презервативность", "преизлишественность", "пригожесть", "приземленность", "прилежание", "примментность", "принюхивание", "пристанищность", "приторность", "прихотливость", "провинциально-французский", "проективность", "пронзительность", "проповедничество", "просветленность", "противоречивость", "прыскливость", "пустяковость", "пылкостность", "радужноватость", "разбудительность", "разносильнейший", "разораживание", "разумозамысленность", "ранимость", "раскислительность", "расцвеченность", "ревностность", "регламентированность", "редколесье", "реномированный", "рефлексивность", "родственничество", "романтичность", "роскошествование", "роспись", "румяноватость", "рыжеватость", "самоуверенность", "светоносность", "свеклоподобный", "своимсподобность", "священноправдивость", "сгуститель", "сердечность", "сжигаемость", "сиятельство", "синтетический", "сиятельность", "сказочность", "скороговорливость", "служащий", "смелость", "смешливость", "снобизм", "соболеобразность", "совместительство", "сознательность", "сочинительствование", "спальник", "спектакель", "спокойнейшение", "срамота", "средоточность", "счастность", "стилизованность", "стойкость", "строгальщик", "стыдливость", "судоподъемник", "сумбурность", "тайганщик", "талантливость", "темпераментность", "тиран"]
    word = random.choice(words)
    users[message.chat.id] = User(chat_id=message.chat.id, level=level, word=word, masked_word="_" * len(word))
    print(word)
    bot.send_message(message.chat.id, f"Вы выбрали {level.lower()} уровень. У вас 5 попыток.")
    bot.send_message(message.chat.id, "Загаданное слово: " + users[message.chat.id].masked_word)
    bot.send_message(message.chat.id, str(len(word)) + " букв")
    bot.send_message(message.chat.id, "Введите букву:")

@bot.message_handler(func=lambda message: len(message.text) == 1 and message.text.isalpha())
def check_letter(message):
    if message.chat.id in users:
        user = users[message.chat.id]
        letter = message.text.lower()  # Преобразование введенной буквы в нижний регистр
        if letter in user.word:
            temp_word = "".join([letter if user.word[i] == letter else user.masked_word[i] for i in range(len(user.word))])
            user.masked_word = temp_word
            if temp_word == user.word:
                bot.send_message(message.chat.id, "Загаданное слово: " + temp_word)
                bot.send_message(message.chat.id, "Вы угадали слово! Поздравляю!")
                del users[message.chat.id]  # Завершаем игру
                return
        else:
            user.tries -= 1
        bot.send_message(message.chat.id, "Загаданное слово: " + user.masked_word)
        bot.send_message(message.chat.id, "Осталось попыток: " + str(user.tries))
        bot.send_message(message.chat.id, "А знаете что меньше числа оставшихся попыток?Это цена билетов на aviasales.ru !")
        if user.tries == 0:
            bot.send_message(message.chat.id, "У вас закончились попытки. Вы проиграли.")
            del users[message.chat.id]  # Завершаем игру

bot.polling(none_stop=True, interval=0)
